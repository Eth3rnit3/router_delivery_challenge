c
@riders.min { |a, b| a.delivery_time_for(order) <=> b.delivery_time_for(order) }
@riders.min { |r| r.delivery_time_for(order) }.delivery_time_for(order)
@riders.map { |r| r.delivery_time_for(order) }.min
@riders.map { |r| r.delivery_time_for(order) }.mix
@riders.map { |r| r.delivery_time_for(order) }
@riders.max { |r| r.delivery_time_for(order) }
@riders.min { |r| r.delivery_time_for(order) }
find_best_rider(order)
@riders.last.routes
@riders.last.id
@riders.last.delivery_time_for(order)
@riders.first.delivery_time_for(order)
rider
c
valid_rider.routes
valid_rider.routes.count
rider
valid_rider.id
exit
@riders.first.speed
@riders.last.speed
@riders.last.delivery_time_for(order)
@riders.first.delivery_time_for(order)
exit
@riders.min { |r| r.delivery_time_for(order) }
@riders.count
order
exit
c
(((distance1 + distance2) * 60) / speed) + order.restaurant.cooking_time
4 * 60 / 10
distance1
((distance1 + distance2) * speed)
((distance1 + distance2) * speed) / 60
distance2
distance1
((distance1 + distance2) * (speed.fdiv(60)))
speed.fdiv 60
speed
speed / 60
((distance1 + distance2) * (speed / 60))
((distance1 + distance2) * speed)
distance2
distance1
id
exit
@estimated_deliver_at
@estimated_deliver_time
exit
model.class.superclass == ModelBase
model.class.parent == ModelBase
self.class
model.class.superclass
model.class
model
